package com.github.creaticat;

import org.javacord.api.DiscordApi;
import org.javacord.api.DiscordApiBuilder;
import org.javacord.api.entity.activity.ActivityType;
import org.javacord.api.entity.message.embed.EmbedBuilder;
import java.util.Date;

public class Main {

    private static String catname;
    private static int friendlvl;
    private static int happylvl;
    private static String quote;
    private static String fDescrip;

    private static String time;
    private static Date date;
    private static Date lastPetted;
    private static Date lastPrayed;
    private static Date lastTribute;

    private static String tributeQuote;

    private static String botPrefix;

    private static Date lastDecay;

    private static String imgLink;

    public static void main(String[] args) {

        // Insert your bot's token here
        String token = "Nzc3MDA1NDMwODM2MTY2NzA2.X69Isg.UIMr3G2HBumDTqR4WqxcqtX4eXw";

        //logs the bot in
        DiscordApi api = new DiscordApiBuilder().setToken(token).login().join();

        //resets stats when the bot is restarted
        resetStats();

        //get current date
        date = new java.util.Date();
        time = getTime();

        //updates bot status when it is first started
        api.updateActivity(ActivityType.WATCHING,
                "you mortals, for I am the great " + getCatname());

        //add the listener for catching commands
        api.addMessageCreateListener(event -> {
            // info command
            if (event.getMessageContent().equalsIgnoreCase(getBotPrefix() + "info")) {

                String catName = getCatname();
                setQuote();
                setfDescrip();
                setImage();

                EmbedBuilder statsEmbed = new EmbedBuilder()
                        .setTitle("Current Stats:")
                        .addField("Name", catName)
                        .addField("Friendship Level", getFriendshipLvl())
                        .addField("Happiness Level", getHappinessLvl())
                        .addField("Description", getfDescrip())
                        .addField("Kitty quote of the day", getQuote())
                        .setImage(getImgLink());

                event.getChannel().sendMessage(statsEmbed);
            }

            //help command
            if (event.getMessageContent().equalsIgnoreCase(getBotPrefix() + "help")) {

                EmbedBuilder statsEmbed = new EmbedBuilder()
                        .setTitle("Actions:")
                        .addField("Name our local god",
                                getBotPrefix() + "setName <insert name here>")
                        .addField("Say \"hi\" to our local god",
                                getBotPrefix() + "hello")
                        .addField("Change the summoning ritual (changing the prefix)",
                                getBotPrefix() + "setPrefix <insert your symbol of choice>")
                        .addField("You can pet me (be nice tho... I'm watching you...)",
                                getBotPrefix() + "pet")
                        .addField("You can pray to me (I am a god after all... or, used to be...)",
                                getBotPrefix() + "pray")
                        .addField("Gimme money (I need it for the catnip, I am still a cat y'know?)",
                                getBotPrefix() + "tribute"
                                        + "\n pssst, this is a once a day type of thing")
                        .addField("Risk your fingers",
                                getBotPrefix() + "boop")
                        .addField("Check up on me",
                                getBotPrefix() + "info")
                        .addField("Invite me to other servers (I need more followers)",
                                getBotPrefix() + "invite");

                event.getChannel().sendMessage(statsEmbed);
            }

            //hello command
            if (event.getMessageContent().equalsIgnoreCase(getBotPrefix() + "hello")) {
                setQuote();
                event.getChannel().sendMessage(getQuote());
                setfDescrip();
                event.getChannel().sendMessage(getfDescrip());
                event.getChannel().sendMessage("I am the great " + getCatname()
                        +". If you need help, please do (" + getBotPrefix() + "help)");
            }

            //speak command - just to pull up quotes
            if (event.getMessageContent().equalsIgnoreCase(getBotPrefix() + "speak")) {
                setQuote();
                event.getChannel().sendMessage(getQuote());
                setfDescrip();
                event.getChannel().sendMessage(getfDescrip());
            }

            //boop command - decreases happiness
            if (event.getMessageContent().equalsIgnoreCase(getBotPrefix() + "boop")) {
                event.getChannel().sendMessage("grrr >:^(");
                int decr = (int) boop();
                setHappylvl(decr);
                event.getChannel().sendMessage("Happiness -" + decr);
                setQuote();
                event.getChannel().sendMessage(getQuote());
                setfDescrip();
                event.getChannel().sendMessage(getfDescrip());
            }

            // pet command
            if (event.getMessageContent().equalsIgnoreCase( getBotPrefix() + "pet")) {
                long coolDown = 300000 - (getDate().getTime() - getLastPetted().getTime());
                if (coolDown <= 0) {
                    int incr = (int) pet();
                    setHappylvl(incr);
                    event.getChannel().sendMessage("Happiness +" + incr);

                    setLastPetted(getDate());
                }
                else {
                    event.getChannel().sendMessage("You must wait " + coolDown/60000 +
                            " minutes before you can pet the cat again.");
                }

            }

            // pray command
            if (event.getMessageContent().equalsIgnoreCase( getBotPrefix() + "pray")) {
                long coolDown = 21600000 - (getDate().getTime() - getLastPrayed().getTime());
                if (coolDown <= 0) {
                    int incrf = (int) pray();
                    friendlvl += incrf;
                    event.getChannel().sendMessage("Friendship +" + incrf);

                    setLastPrayed(getDate());
                }
                else {
                    event.getChannel().sendMessage("You must wait " + coolDown/3600000 +
                            " hours before you can pet the cat again.");
                }
            }

            // tribute command
            if (event.getMessageContent().equalsIgnoreCase( getBotPrefix() + "tribute")) {
                long coolDown = 86400000 - (getDate().getTime() - getLastTribute().getTime());
                if (coolDown <= 0) {
                    int num = (int) (Math.random() * ((4) + 1)); //random between 5 and 0
                    friendlvl += 5;
                    setHappylvl(20);
                    event.getChannel().sendMessage(getTributeQuote(num) + "\nHappiness +20");

                    setLastTribute(getDate());
                }

                else {
                    event.getChannel().sendMessage("You must wait " + coolDown/3600000 +
                            " hours before you pay tribute again.");
                }

            }

            //change prefix command
            if (event.getMessageContent().substring(0,11).equalsIgnoreCase(getBotPrefix() + "setPrefix ")) {
                setBotPrefix(event.getMessageContent().substring(11));
                event.getChannel().sendMessage("You can summon me using " + getBotPrefix() + " now");
            }

            // set cat name command
            if (event.getMessageContent().substring(0,9).equalsIgnoreCase(getBotPrefix() + "setName ")) {
                String nameNow = catname;
                nameNow = event.getMessageContent().substring(9);
                event.getChannel().sendMessage("oh my name is " + nameNow + " now, huh...");
                setCatname(nameNow);
                api.updateActivity(ActivityType.WATCHING, "you mortals, for I am the great " + getCatname());
            }

            // get the invite link command
            if (event.getMessageContent().equalsIgnoreCase( getBotPrefix() + "invite")) {
                event.getChannel().sendMessage("Invite the cat:\n" + api.createBotInvite());
            }

            // check the current time for the bot
            if (event.getMessageContent().equalsIgnoreCase("!time")) {
                event.getChannel().sendMessage(String.valueOf(getDate()));
            }



        }); //end of listener

        // happiness constantly decreases
        while(true){
            happinessDecay();
        }
    }


    public static double pet() {
        double increase = (int)(Math.random() * ((10 - 1) + 2));

        return increase;
    }

    public static double pray() {
        double prayinc = (int)(Math.random() * ((5 - 1) + 1));

        return prayinc;
    }

    public static double boop(){
        double decrease = -1;
        return decrease;
    }


    //getters
    public static String getFriendshipLvl() {
        return String.valueOf(friendlvl);
    }
    public static String getHappinessLvl() {
        return String.valueOf(happylvl);
    }
    public static String getfDescrip() {
        return fDescrip;
    }
    public static String getQuote() {
        return quote;
    }
    public static Date getDate(){
        Date updatedDate = new java.util.Date();

        return updatedDate;
    }
    public static String getTime(){
        return String.valueOf(getDate()).substring(11, 19);
    }
    public static Date getLastPetted(){
        return lastPetted;
    }
    public static Date getLastPrayed(){
        return lastPrayed;
    }
    public static Date getLastTribute(){
        return lastTribute;
    }
    public static String getTributeQuote(int num){
        setTributeQuote(num);
        return tributeQuote;
    }
    public static String getBotPrefix(){
        return botPrefix;
    }
    public static String getCatname(){
        return catname;
    }
    public static Date getLastDecay(){
        return lastDecay;
    }
    public static String getImgLink(){
        return imgLink;
    }

    //setters
    public static void setHappylvl(int incr){
        happylvl += incr;
        if (happylvl < 0){
            happylvl = 0;
        }
    }
    public static void setLastPetted(Date when) {
        lastPetted = when;
    }
    public static void setLastPrayed(Date when) {
        lastPrayed = when;
    }
    public static void setLastTribute(Date when){
        lastTribute = when;
    }
    public static void setBotPrefix(String prefix) {
        botPrefix = prefix;
    }
    public static void setCatname(String name) {
        catname = name;
    }

    //sets quote based on happiness level
    public static void setQuote(){ //changes quote based on friendship level
        if (happylvl < 10){
            quote = "What'cha staring at, puny mortal?";
        }
        else if (happylvl >= 10 && happylvl < 25){
            quote = "Hmm? Looking for something?";
        }
        else if (happylvl >= 25 && happylvl < 50){
            quote = "I presume you brought offerings if you're seeking my wisdom.";
        }
        else if (happylvl >= 50 && happylvl < 75){
            quote = "*Yawns*~ ...You need something?";
        }
        else if (friendlvl >= 75 && friendlvl < 99){
            quote = "Welcome back. You've been gone for a while, I've gotten bored!";
        }
        else{
            quote = "You're a pretty cool person, I like you a lot!";
        }
    }

    //sets friendship description based on friendship level
    public static void setfDescrip(){ //changes description based on friendship level
        if (friendlvl < 10){
            fDescrip = catname + " flicks its tail with a dangerous glint in its eyes.";
        }
        else if (friendlvl >= 10 && friendlvl < 25){
            fDescrip = catname + " gracefully sits on the top of the shrine, looking down at you disdainfully.";
        }
        else if (friendlvl >= 25 && friendlvl < 50){
            fDescrip = catname + " looks forward to your offerings.";
        }
        else if (friendlvl >= 50 && friendlvl < 75){
            fDescrip = catname + "'s languid form melts underneath the sun's rays. Perhaps " + catname + " is getting a bit too comfortable?";
        }
        else if (friendlvl >= 75 && friendlvl < 99){
            fDescrip = "Looks like you're less of a devout worshipper and more of a pet-keeper these days... Not that " + catname + " would ever admit it.";
        }
        else{
            fDescrip = "Being best friends with a cat god ain't bad...";
        }
    }


    //sets tribute quote (random)
    public static void setTributeQuote(int num){
        switch (num){
            case 0: tributeQuote = "Oh? Looks like you do know manners after all, hehe."; break;
            case 1: tributeQuote = "Tasty! Yum."; break;
            case 2: tributeQuote = "Heh, you have good taste."; break;
            case 3: tributeQuote = "*Your food vanishes in the blink of an eye*"; break;
            case 4: tributeQuote = "Ah! You brought fish today!"; break;
        }
    }

    //sets image based on happiness level
    public static void setImage(){ //changes quote based on friendship level
        if (happylvl < 10){
            imgLink = "https://media.discordapp.net/attachments/776249558598025237/776249650360746034/sleeping.png?width=670&height=670";
        }
        else if (happylvl >= 50 && happylvl < 75){
            imgLink = "https://media.discordapp.net/attachments/776249558598025237/776249647097970708/bored.png?width=670&height=670";
        }
        else{
            imgLink = "https://media.discordapp.net/attachments/776249558598025237/776249650042765352/wink.png?width=670&height=670";
        }
    }

    //happiness decreases over time
    public static void happinessDecay(){
        if(happylvl > 0) {
            long time = 2700 - (getDate().getTime() - getLastDecay().getTime());
            if(time <= 0){
                happylvl--;
            }
        }
    }

    public static void resetStats() { //reset
        catname = "CreatiCat";
        quote = "";
        friendlvl = 0;
        happylvl = 0;
        fDescrip = "";

        long x = 0;
        Date defaultDate = new Date(x);

        lastPetted = defaultDate;
        lastPrayed = defaultDate;
        lastTribute = defaultDate;
        lastDecay = defaultDate;

        botPrefix = ".";

    }
}
